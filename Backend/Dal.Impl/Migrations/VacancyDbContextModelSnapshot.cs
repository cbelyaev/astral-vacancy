// <auto-generated />
using System;
using AstralVacancy.Dal.Impl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AstralVacancy.Dal.Impl.Migrations
{
    [DbContext(typeof(VacancyDbContext))]
    partial class VacancyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AstralVacancy.Dal.Impl.Do.UserDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Login");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("UserSet");

                    b.HasData(
                        new { Id = 1, FullName = "Админ Админыч Админов", IsAdmin = true, Login = "admin", PasswordHash = "AQAAAAEAACcQAAAAEAHzy0ies5x3G6daN4jbaKXfQ7+gmXZeEegCg6vJkysfGBZziXF6O4BBxgqiAeByqw==" },
                        new { Id = 2, FullName = "Юзер Юзерович Юзеров", IsAdmin = false, Login = "user", PasswordHash = "AQAAAAEAACcQAAAAEGSxyWsqQyUCBluehUw5jOfZuk73R4RYfKDmMumxwm0lp2l9faeQu2rr2mVBrW7vNw==" }
                    );
                });

            modelBuilder.Entity("AstralVacancy.Dal.Impl.Do.VacancyDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("EmployerName");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset?>("Published");

                    b.Property<string>("SyncId");

                    b.HasKey("Id");

                    b.HasIndex("SyncId")
                        .IsUnique();

                    b.ToTable("VacancySet");
                });

            modelBuilder.Entity("AstralVacancy.Dal.Impl.Do.VacancyDo", b =>
                {
                    b.OwnsOne("AstralVacancy.Dal.Impl.Do.SalaryDo", "Salary", b1 =>
                        {
                            b1.Property<int?>("VacancyDoId");

                            b1.Property<string>("Currency");

                            b1.Property<double?>("From");

                            b1.Property<bool?>("Gross");

                            b1.Property<double?>("To");

                            b1.ToTable("VacancySet");

                            b1.HasOne("AstralVacancy.Dal.Impl.Do.VacancyDo")
                                .WithOne("Salary")
                                .HasForeignKey("AstralVacancy.Dal.Impl.Do.SalaryDo", "VacancyDoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
